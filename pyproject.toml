[project]
name = "nanonis-xarray"
description = "Read a Nanonis spectroscopy .dat file into a xarray Dataset"
authors = [{ name = "Angelo Peronio" }]
keywords = [
    "Nanonis",
    "SPECS",
    "xarray",
    "Scanning Tunnelling Microscopy",
    "STM",
    "Inelastic Electron Tunnelling Spectroscopy",
    "STM-IETS",
    "Scanning Tunnelling Spectroscopy",
    "STS",
    "Scanning Probe Spectroscopy",
    "SPS",
    "Atomic Force Microscopy",
    "AFM",
]
dynamic = ["version"]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    # 2024-10-21 Pint does not work on Python 3.13.
    # https://github.com/hgrecco/pint/issues/1969
    #"Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: File Formats",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Typed",
]
# Scientific Python recommendation on versions to support:
# <https://scientific-python.org/specs/spec-0000/>
# 2024-10-21 Pint does not work on Python 3.13.
# https://github.com/hgrecco/pint/issues/1969
requires-python = ">= 3.10, < 3.13"
# Before attempting stunts here, consider the fragile logic
# for oldest_deps in noxfile.py.
dependencies = ["xarray >= 2022.11", "pint >= 0.24"]
optional-dependencies.dev = [
    "build",
    "mypy",
    "pre-commit",
    "nox",
    "ruff",
    "nanonis-xarray[test]",
    "nanonis-xarray[docs]",
]
optional-dependencies.test = ["pytest", "pytest-cov"]
optional-dependencies.docs = ["ipykernel", "ipympl"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
build.targets.sdist.only-packages = true
version.source = "vcs"

[tool.hatch.version.raw-options]
# Version tag pattern: v[major].[minor].[patch]
# https://setuptools-scm.readthedocs.io/en/latest/config/#setuptools_scm._config.DEFAULT_TAG_REGEX
# Single quote --> literal string, https://toml.io/en/v1.0.0#string
tag_regex = '^(?P<version>v?\d+\.\d+\.\d+)$'
# To be able to publish dev versions to TestPyPI.
# https://github.com/ofek/hatch-vcs/discussions/12
local_scheme = "no-local-version"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--import-mode=importlib",
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]
log_cli_level = "DEBUG"
minversion = "7"
xfail_strict = true
testpaths = ["tests"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    # "ANN",    # https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
    # "TRY003", # https://docs.astral.sh/ruff/rules/raise-vanilla-args/
]
extend-per-file-ignores."tests/*.py" = [
    "S101",    # https://docs.astral.sh/ruff/rules/assert/
    "PLR2004", # https://docs.astral.sh/ruff/rules/magic-value-comparison/
]
pydocstyle.convention = "numpy"

[tool.mypy]
files = ["src", "tests", "noxfile.py"]
strict = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.uv]
# uv should not cache gsffile.
# See e.g. warning at
# <https://nox.thea.codes/en/stable/usage.html#changing-the-sessions-default-backend>
reinstall-package = ["nanonis-xarray"]
